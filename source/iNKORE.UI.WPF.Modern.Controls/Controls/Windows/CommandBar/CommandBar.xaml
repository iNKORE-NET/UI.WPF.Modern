<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls"
    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Primitives"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern.Controls;component/Controls/Windows/CommandBar/AppBarButton.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern.Controls;component/Controls/Windows/CommandBar/AppBarSeparator.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern.Controls;component/Controls/Windows/CommandBar/AppBarRepeatButton.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern.Controls;component/Controls/Windows/CommandBar/AppBarToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="primitives:CommandBarToolBar">
        <Setter Property="Background" Value="{DynamicResource CommandBarBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarForeground}" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarToolBar">
                    <Grid x:Name="LayoutRoot" SnapsToDevicePixels="True">
                        <Border
                            x:Name="ContentRoot"
                            Height="{TemplateBinding Height}"
                            MinHeight="{DynamicResource AppBarThemeCompactHeight}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Top"
                            Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" MinWidth="{DynamicResource AppBarMoreButtonColumnMinWidth}" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="ContentControlColumnDefinition" Width="*" />
                                        <ColumnDefinition x:Name="PrimaryItemsControlColumnDefinition" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <!--
                                        Use a ContentControl rather than a ContentPresenter so that IsEnabled can be set to false
                                        in the Minimal/HiddenClosed states to remove it from being a tab-stop candidate.
                                    -->
                                    <ContentControl
                                        x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <primitives:CommandBarPanel
                                        x:Name="PART_ToolBarPanel"
                                        Grid.Column="1"
                                        MinHeight="{DynamicResource AppBarThemeCompactHeight}"
                                        HorizontalAlignment="Right"
                                        IsItemsHost="true"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <ToggleButton
                                    x:Name="MoreButton"
                                    Grid.Column="1"
                                    MinHeight="{DynamicResource AppBarThemeCompactHeight}"
                                    Padding="{DynamicResource CommandBarMoreButtonMargin}"
                                    VerticalAlignment="Top"
                                    ClickMode="Press"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsEnabled="{TemplateBinding HasOverflowItems}"
                                    Style="{DynamicResource EllipsisButton}"
                                    ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                    Visibility="{TemplateBinding EffectiveOverflowButtonVisibility}">
                                    <ui:FontIcon
                                        x:Name="EllipsisIcon"
                                        Height="{DynamicResource AppBarExpandButtonCircleDiameter}"
                                        VerticalAlignment="Center"
                                        FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                        FontSize="20"
                                        Glyph="&#xE712;" />
                                </ToggleButton>
                                <Rectangle
                                    x:Name="HighContrastBorder"
                                    Grid.ColumnSpan="2"
                                    VerticalAlignment="Stretch"
                                    Stroke="{DynamicResource CommandBarHighContrastBorder}"
                                    StrokeThickness="1"
                                    Visibility="Collapsed" />
                                <Border
                                    x:Name="OpenBorder"
                                    Grid.ColumnSpan="2"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="{DynamicResource CommandBarBorderBrushOpen}"
                                    BorderThickness="{DynamicResource CommandBarBorderThicknessOpen}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Collapsed" />
                                <ui:MenuPopup
                                    x:Name="OverflowPopup"
                                    AllowsTransparency="true"
                                    Focusable="false"
                                    IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Custom"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                    StaysOpen="True">
                                    <ui:ThemeShadowChrome
                                        x:Name="OverflowContentRoot"
                                        MinWidth="{DynamicResource CommandBarOverflowMinWidth}"
                                        MaxWidth="{DynamicResource CommandBarOverflowMaxWidth}"
                                        MaxHeight="{TemplateBinding OverflowContentMaxHeight}"
                                        CornerRadius="{Binding ElementName=SecondaryItemsControl, Path=CornerRadius}"
                                        IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"
                                        RenderOptions.ClearTypeHint="Enabled">

                                        <primitives:CommandBarOverflowPresenter
                                            x:Name="SecondaryItemsControl"
                                            IsTabStop="False"
                                            Style="{TemplateBinding OverflowPresenterStyle}">
                                            <primitives:CommandBarOverflowPresenter.Resources>
                                                <Style BasedOn="{StaticResource AppBarButtonOverflowStyle}" TargetType="local:AppBarButton" />
                                                <Style BasedOn="{StaticResource AppBarSeparatorOverflowStyle}" TargetType="local:AppBarSeparator" />
                                                <Style BasedOn="{StaticResource AppBarRepeatButtonOverflowStyle}" TargetType="local:AppBarRepeatButton" />
                                                <Style BasedOn="{StaticResource AppBarToggleButtonOverflowStyle}" TargetType="local:AppBarToggleButton" />
                                            </primitives:CommandBarOverflowPresenter.Resources>
                                            <primitives:CommandBarOverflowPanel
                                                x:Name="PART_ToolBarOverflowPanel"
                                                Margin="{DynamicResource CommandBarOverflowPresenterMargin}"
                                                FocusVisualStyle="{x:Null}"
                                                Focusable="true"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Once"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </primitives:CommandBarOverflowPresenter>
                                    </ui:ThemeShadowChrome>
                                </ui:MenuPopup>
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="AvailableCommandsStates">
                                <VisualState x:Name="BothCommands" />
                                <VisualState x:Name="PrimaryCommandsOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SecondaryCommandsOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ToolBarPanel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EllipsisIcon" Property="Foreground" Value="{DynamicResource CommandBarEllipsisIconForegroundDisabled}" />
                        </Trigger>
                        <Trigger Property="DefaultLabelPosition" Value="Bottom">
                            <Setter TargetName="MoreButton" Property="VerticalAlignment" Value="Stretch" />
                        </Trigger>
                        <Trigger Property="IsOverflowOpen" Value="True">
                            <Setter TargetName="ContentRoot" Property="Background" Value="{DynamicResource CommandBarBackgroundOpen}" />
                            <Setter TargetName="ContentRoot" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}" />
                            <Setter TargetName="OpenBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MoreButton" Property="VerticalAlignment" Value="Stretch" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowContentRoot" Property="Opacity" Value="1" />
                        </Trigger>
                        <!--  DynamicOverflowEnabled  -->
                        <Trigger Property="IsDynamicOverflowEnabled" Value="True">
                            <Setter TargetName="ContentControlColumnDefinition" Property="Width" Value="Auto" />
                            <Setter TargetName="PrimaryItemsControlColumnDefinition" Property="Width" Value="*" />
                        </Trigger>
                        <Trigger SourceName="OverflowPopup" Property="IsSuspendingAnimation" Value="true">
                            <Setter TargetName="OverflowPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultCommandBarOverflowPresenterStyle" TargetType="primitives:CommandBarOverflowPresenter">
        <Setter Property="Background" Value="{DynamicResource CommandBarOverflowPresenterBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarOverflowPresenterBorderBrush}" />
        <Setter Property="Padding" Value="{DynamicResource CommandBarOverflowPresenterBorderPadding}" />
        <Setter Property="MaxWidth" Value="{DynamicResource CommandBarOverflowMaxWidth}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarOverflowPresenter">
                    <Border
                        x:Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{DynamicResource CommandBarOverflowPresenterBorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Border Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding CornerRadius}">
                            <ui:ScrollViewerEx
                                Content="{TemplateBinding Content}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="DisplayModeStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="DisplayModeDefault" />
                                <VisualState x:Name="FullWidthOpenDown" />
                                <VisualState x:Name="FullWidthOpenUp" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  FullWidthOpenDown  -->
                        <Trigger SourceName="DisplayModeStatesListener" Property="CurrentStateName" Value="FullWidthOpenDown">
                            <Setter TargetName="LayoutRoot" Property="Padding" Value="{DynamicResource CommandBarOverflowPresenterBorderDownPadding}" />
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="{DynamicResource CommandBarOverflowPresenterBorderDownThickness}" />
                        </Trigger>
                        <!--  FullWidthOpenUp  -->
                        <Trigger SourceName="DisplayModeStatesListener" Property="CurrentStateName" Value="FullWidthOpenUp">
                            <Setter TargetName="LayoutRoot" Property="Padding" Value="{DynamicResource CommandBarOverflowPresenterBorderUpPadding}" />
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="{DynamicResource CommandBarOverflowPresenterBorderUpThickness}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultCommandBarOverflowPresenterStyle}" TargetType="primitives:CommandBarOverflowPresenter" />

    <Style x:Key="DefaultCommandBarStyle" TargetType="local:CommandBar">
        <Setter Property="Background" Value="{DynamicResource CommandBarBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarForeground}" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="CommandBarOverflowPresenterStyle" Value="{StaticResource DefaultCommandBarOverflowPresenterStyle}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CommandBar">
                    <primitives:CommandBarToolBar
                        x:Name="PART_ToolBar"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        DefaultLabelPosition="{TemplateBinding DefaultLabelPosition}"
                        Foreground="{TemplateBinding Foreground}"
                        Header="{TemplateBinding Content}"
                        HeaderTemplate="{TemplateBinding ContentTemplate}"
                        IsDynamicOverflowEnabled="{TemplateBinding IsDynamicOverflowEnabled}"
                        IsOverflowOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IsTabStop="{TemplateBinding IsTabStop}"
                        OverflowButtonVisibility="{TemplateBinding OverflowButtonVisibility}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultCommandBarStyle}" TargetType="local:CommandBar" />

</ResourceDictionary>