<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls"
    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Primitives"
    xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <ikw:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="Top" />
            <ikw:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="Bottom" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="CommandBarFlyoutAppBarButtonInnerBorderMargin">2</Thickness>

    <Style x:Key="CommandBarFlyoutAppBarButtonStyleBase" TargetType="local:AppBarButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutAppBarButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="NaN" />
        <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarButton">
                    <Grid
                        x:Name="Root"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}">
                        <Border
                            x:Name="AppBarButtonInnerBorder"
                            Margin="{StaticResource CommandBarFlyoutAppBarButtonInnerBorderMargin}"
                            ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                        <Grid x:Name="ContentRoot" MinWidth="40">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="IconAndLabelPanel" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Viewbox x:Name="ContentViewbox" Height="16">
                                    <ui:ContentPresenterEx 
                                        x:Name="Content"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}"/>
                                </Viewbox>
                                <TextBlock x:Name="TextLabel" 
                                           Grid.Row="1"
                                           Text="{TemplateBinding Label}" 
                                           Style="{DynamicResource CaptionTextBlockStyle}" 
                                           Foreground="{TemplateBinding Foreground}"
                                           FontFamily="{TemplateBinding FontFamily}" 
                                           TextAlignment="Center"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="NoWrap" 
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Center"
                                           Margin="0,6,0,2" 
                                           Visibility="Collapsed" />
                            </Grid>
                            <TextBlock
                                x:Name="OverflowTextLabel"
                                Margin="12,0,12,0"
                                Padding="0,6,0,7"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                FontFamily="{TemplateBinding FontFamily}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource BodyTextBlockStyle}"
                                Text="{TemplateBinding Label}"
                                TextAlignment="Left"
                                TextWrapping="NoWrap"
                                TextTrimming="CharacterEllipsis"
                                Visibility="Collapsed" />
                            <TextBlock
                                x:Name="KeyboardAcceleratorTextLabel"
                                Grid.Column="1"
                                MinWidth="34"
                                Margin="24,0,12,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForeground}"
                                Style="{DynamicResource CaptionTextBlockStyle}"
                                Text="{TemplateBinding InputGestureText}"
                                Visibility="Collapsed" />
                            <ui:FontIcon
                                x:Name="SubItemChevron"
                                Grid.Column="2"
                                Margin="12,0,12,0"
                                VerticalAlignment="Center"
                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                FontSize="12"
                                Foreground="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronForeground}"
                                Glyph="&#xE76C;"
                                Visibility="Collapsed" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ApplicationViewStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="LabelOnRight" />
                                <VisualState x:Name="LabelCollapsed" />
                                <VisualState x:Name="Overflow" />
                                <VisualState x:Name="OverflowWithToggleButtons" />
                                <VisualState x:Name="OverflowWithMenuIcons" />
                                <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="OverflowNormal" />
                                <VisualState x:Name="OverflowPointerOver" />
                                <VisualState x:Name="OverflowPressed" />
                                <VisualState x:Name="OverflowSubMenuOpened" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="KeyboardAcceleratorTextVisibilityListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlyoutStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="FlyoutStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NoFlyout" />
                                <VisualState x:Name="HasFlyout" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PrimaryLabelStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PrimaryLabelStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NoPrimaryLabels" />
                                <VisualState x:Name="HasPrimaryLabels" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region ApplicationViewStates-->
                        <!--  Overflow  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="TextLabel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  OverflowWithToggleButtons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="TextLabel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="TextLabel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithToggleButtonsAndMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtonsAndMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="39,0,12,0" />
                            <Setter TargetName="TextLabel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="67,0,12,0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region CommonStates-->
                        <!--  PointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="TextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  Pressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="TextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="TextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronDisabledForeground}" />
                        </Trigger>
                        <!--  OverflowPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPointerOverForeground}" />
                        </Trigger>
                        <!--  OverflowPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPressed}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPressedForeground}" />
                        </Trigger>
                        <!--  OverflowSubMenuOpened  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowSubMenuOpened">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronSubMenuOpenedForeground}" />
                        </Trigger>
                        <!--#endregion-->
                        <!--  KeyboardAcceleratorTextVisible  -->
                        <Trigger SourceName="KeyboardAcceleratorTextVisibilityListener" Property="CurrentStateName" Value="KeyboardAcceleratorTextVisible">
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  HasFlyout  -->
                        <Trigger SourceName="FlyoutStatesListener" Property="CurrentStateName" Value="HasFlyout">
                            <Setter TargetName="SubItemChevron" Property="Visibility" Value="{DynamicResource AppBarButtonHasFlyoutChevronVisibility}" />
                        </Trigger>
                        <!--  HasPrimaryLabels  -->
                        <Trigger SourceName="PrimaryLabelStatesListener" Property="CurrentStateName" Value="HasPrimaryLabels">
                            <Setter TargetName="IconAndLabelPanel" Property="Margin" Value="0,9,0,0" />
                            <Setter TargetName="IconAndLabelPanel" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="IconAndLabelPanel" Property="Width" Value="60" />
                            <Setter TargetName="TextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="NaN" />
                <Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
                <Setter Property="FocusVisualMargin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CommandBarFlyoutAppBarButtonStyle"
        BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyleBase}"
        TargetType="local:AppBarButton" />

    <Style x:Key="CommandBarFlyoutAppBarRepeatButtonStyleBase" TargetType="local:AppBarRepeatButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutAppBarButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="0,0,0,2" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarRepeatButton">
                    <Grid
                        x:Name="Root"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}">
                        <Border
                            x:Name="AppBarButtonInnerBorder"
                            Margin="{StaticResource CommandBarFlyoutAppBarButtonInnerBorderMargin}"
                            ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                        <Grid x:Name="ContentRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox
                                x:Name="ContentViewbox"
                                Height="16"
                                HorizontalAlignment="Stretch">
                                <ui:ContentPresenterEx
                                    x:Name="Content"
                                    Content="{TemplateBinding Icon}"
                                    Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                            <TextBlock
                                x:Name="OverflowTextLabel"
                                Margin="12,0,12,0"
                                Padding="0,6,0,7"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                FontFamily="{TemplateBinding FontFamily}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource BodyTextBlockStyle}"
                                Text="{TemplateBinding Label}"
                                TextAlignment="Left"
                                TextWrapping="NoWrap"
                                Visibility="Collapsed" />
                            <TextBlock
                                x:Name="KeyboardAcceleratorTextLabel"
                                Grid.Column="1"
                                MinWidth="34"
                                Margin="24,0,12,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForeground}"
                                Style="{DynamicResource CaptionTextBlockStyle}"
                                Text="{TemplateBinding InputGestureText}"
                                Visibility="Collapsed" />
                            <ui:FontIcon
                                x:Name="SubItemChevron"
                                Grid.Column="2"
                                Margin="12,0,12,0"
                                VerticalAlignment="Center"
                                FontFamily="{DynamicResource FluentSystemIcons}"
                                FontSize="12"
                                Foreground="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronForeground}"
                                Glyph="&#xF2B0;"
                                Visibility="Collapsed" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ApplicationViewStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="LabelOnRight" />
                                <VisualState x:Name="LabelCollapsed" />
                                <VisualState x:Name="Overflow" />
                                <VisualState x:Name="OverflowWithToggleButtons" />
                                <VisualState x:Name="OverflowWithMenuIcons" />
                                <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="OverflowNormal" />
                                <VisualState x:Name="OverflowPointerOver" />
                                <VisualState x:Name="OverflowPressed" />
                                <VisualState x:Name="OverflowSubMenuOpened" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="KeyboardAcceleratorTextVisibilityListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlyoutStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="FlyoutStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NoFlyout" />
                                <VisualState x:Name="HasFlyout" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region ApplicationViewStates-->
                        <!--  Overflow  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  OverflowWithToggleButtons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithToggleButtonsAndMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtonsAndMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="39,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="67,0,12,0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region CommonStates-->
                        <!--  PointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  Pressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronDisabledForeground}" />
                        </Trigger>
                        <!--  OverflowPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPointerOverForeground}" />
                        </Trigger>
                        <!--  OverflowPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPressed}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPressedForeground}" />
                        </Trigger>
                        <!--  OverflowSubMenuOpened  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowSubMenuOpened">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronSubMenuOpenedForeground}" />
                        </Trigger>
                        <!--#endregion-->
                        <!--  KeyboardAcceleratorTextVisible  -->
                        <Trigger SourceName="KeyboardAcceleratorTextVisibilityListener" Property="CurrentStateName" Value="KeyboardAcceleratorTextVisible">
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  HasFlyout  -->
                        <Trigger SourceName="FlyoutStatesListener" Property="CurrentStateName" Value="HasFlyout">
                            <Setter TargetName="SubItemChevron" Property="Visibility" Value="{DynamicResource AppBarButtonHasFlyoutChevronVisibility}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="NaN" />
                <Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
                <Setter Property="FocusVisualMargin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CommandBarFlyoutAppBarRepeatButtonStyle"
        BasedOn="{StaticResource CommandBarFlyoutAppBarRepeatButtonStyleBase}"
        TargetType="local:AppBarRepeatButton" />

    <Style x:Key="CommandBarFlyoutAppBarToggleButtonStyleBase" TargetType="local:AppBarToggleButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutAppBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="0,0,0,2" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarToggleButton">
                    <Border
                        x:Name="Root"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}">
                        <Grid>
                            <Border
                                x:Name="AppBarButtonInnerBorder"
                                Margin="{StaticResource CommandBarFlyoutAppBarButtonInnerBorderMargin}"
                                ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                            <Grid x:Name="ContentRoot">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    x:Name="OverflowCheckGlyph"
                                    Margin="15,4,14,4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontFamily="{DynamicResource FluentSystemIconsFilled}"
                                    FontSize="12"
                                    Foreground="{DynamicResource CommandBarFlyoutAppBarButtonForeground}"
                                    Opacity="0"
                                    Text="&#xF296;"
                                    Visibility="Collapsed" />
                                <Viewbox
                                    x:Name="ContentViewbox"
                                    Height="16"
                                    HorizontalAlignment="Stretch">
                                    <ui:ContentPresenterEx
                                        x:Name="Content"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                <TextBlock
                                    x:Name="OverflowTextLabel"
                                    Margin="39,0,12,0"
                                    Padding="0,6,0,7"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource BodyTextBlockStyle}"
                                    Text="{TemplateBinding Label}"
                                    TextAlignment="Left"
                                    TextWrapping="NoWrap"
                                    Visibility="Collapsed" />
                                <TextBlock
                                    x:Name="KeyboardAcceleratorTextLabel"
                                    Grid.Column="1"
                                    MinWidth="34"
                                    Margin="24,0,12,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForeground}"
                                    Style="{DynamicResource CaptionTextBlockStyle}"
                                    Text="{TemplateBinding InputGestureText}"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ApplicationViewStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="LabelOnRight" />
                                <VisualState x:Name="LabelCollapsed" />
                                <VisualState x:Name="Overflow" />
                                <VisualState x:Name="OverflowWithMenuIcons" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Checked" />
                                <VisualState x:Name="CheckedPointerOver" />
                                <VisualState x:Name="CheckedPressed" />
                                <VisualState x:Name="CheckedDisabled" />
                                <VisualState x:Name="OverflowNormal" />
                                <VisualState x:Name="OverflowPointerOver" />
                                <VisualState x:Name="OverflowPressed" />
                                <VisualState x:Name="OverflowChecked" />
                                <VisualState x:Name="OverflowCheckedPointerOver" />
                                <VisualState x:Name="OverflowCheckedPressed" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="KeyboardAcceleratorTextVisibilityListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region ApplicationViewStates-->
                        <!--  Overflow  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  OverflowWithMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="MaxWidth" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="MaxHeight" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="39,0,12,0" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="67,0,12,0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region CommonStates-->
                        <!--  PointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  Pressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                        </Trigger>
                        <!--  Checked  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Checked">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundChecked}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundChecked}" />
                        </Trigger>
                        <!--  CheckedPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="CheckedPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundCheckedPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundCheckedPointerOver}" />
                        </Trigger>
                        <!--  CheckedPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="CheckedPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundCheckedPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundCheckedPressed}" />
                        </Trigger>
                        <!--  CheckedDisabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="CheckedDisabled">
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <!--  OverflowPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                        </Trigger>
                        <!--  OverflowPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPressed}" />
                        </Trigger>
                        <!--  OverflowChecked  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowChecked">
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <!--  OverflowCheckedPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowCheckedPointerOver">
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  OverflowCheckedPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowCheckedPressed">
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--#endregion-->
                        <!--  KeyboardAcceleratorTextVisible  -->
                        <Trigger SourceName="KeyboardAcceleratorTextVisibilityListener" Property="CurrentStateName" Value="KeyboardAcceleratorTextVisible">
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="NaN" />
                <Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
                <Setter Property="FocusVisualMargin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CommandBarFlyoutAppBarToggleButtonStyle"
        BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyleBase}"
        TargetType="local:AppBarToggleButton" />

    <Style x:Key="CommandBarFlyoutCommandBarOverflowPresenterStyle" TargetType="primitives:CommandBarOverflowPresenter">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="136" />
        <Setter Property="MaxWidth" Value="440" />
        <Setter Property="MaxHeight" Value="480" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarOverflowPresenter">
                    <Border
                        x:Name="LayoutRoot"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Border.Resources>
                            <Visibility x:Key="AppBarButtonHasFlyoutChevronVisibility">Visible</Visibility>
                        </Border.Resources>
                        <Grid>
                            <Border
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Padding="{TemplateBinding BorderThickness}"/>
                            <ui:ScrollViewerEx
                                Margin="3"
                                Content="{TemplateBinding Content}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" >
                            </ui:ScrollViewerEx>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="DisplayModeDefault" />
                                <VisualState x:Name="FullWidthOpenDown" />
                                <VisualState x:Name="FullWidthOpenUp" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <KeySpline x:Key="ControlFastOutSlowInKeySpline">0,0,0,1</KeySpline>
    
    <Duration x:Key="ControlNormalAnimationDuration">00:00:00.250</Duration>
    <Duration x:Key="ControlFastAnimationDuration">00:00:00.167</Duration>
    <Duration x:Key="ControlFastAnimationAfterDuration">00:00:00.168</Duration>
    <Duration x:Key="ControlFasterAnimationDuration">00:00:00.083</Duration>
    
    <Duration x:Key="PopupAnimationDelayDuration">00:00:00.150</Duration>

    <KeyTime x:Key="ControlNormalAnimationKeyTime">00:00:00.250</KeyTime>
    <KeyTime x:Key="ControlFastAnimationKeyTime">00:00:00.167</KeyTime>
    <KeyTime x:Key="ControlFastAnimationAfterKeyTime">00:00:00.168</KeyTime>

    <Style TargetType="primitives:CommandBarFlyoutToolBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutToolBar">
                    <Border
                        x:Name="LayoutRoot"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Border.Resources>
                            <Visibility x:Key="AppBarButtonHasFlyoutChevronVisibility">Collapsed</Visibility>
                            
                            <ui:BindingProxy x:Key="CornerRadiusProxy" Value="{Binding ElementName=LayoutRoot, Path=CornerRadius, Mode=OneWay}"/>
                            <primitives:CommandBarFlyoutCommandBarTemplateSettingsProxy x:Key="TemplateSettingsProxy" FlyoutTemplateSettings="{Binding FlyoutTemplateSettings, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" />
                            
                            <Style BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyle}" TargetType="local:AppBarButton" />
                            <Style BasedOn="{StaticResource CommandBarFlyoutAppBarRepeatButtonStyle}" TargetType="local:AppBarRepeatButton" />
                            <Style BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyle}" TargetType="local:AppBarToggleButton" />

                            <!--
                                We'll only provide opening and closing storyboards for RS5 and above,
                                because we aren't able to suppress the default flyout open/close animations
                                on earlier versions of the OS than that.
                            -->
                            <Storyboard x:Key="OpeningOpacityStoryboard" FillBehavior="Stop">
                                <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="{StaticResource PopupAnimationDelayDuration}" />
                                <DoubleAnimation Storyboard.TargetName="OverflowPopup" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="{StaticResource PopupAnimationDelayDuration}" />
                            </Storyboard>
                            <Storyboard x:Key="ClosingOpacityStoryboard" FillBehavior="HoldEnd">
                                <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="{StaticResource PopupAnimationDelayDuration}" />
                                <DoubleAnimation Storyboard.TargetName="OverflowPopup" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="{StaticResource PopupAnimationDelayDuration}" />
                            </Storyboard>
                            
                            <Storyboard x:Key="CollapsedToExpandedUpStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="VerticalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static VerticalAlignment.Bottom}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            
                            <Storyboard x:Key="ExpandedUpToCollapsedStoryboard" FillBehavior="Stop">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <SplineDoubleKeyFrame
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" 
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationHoldPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="VerticalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static VerticalAlignment.Bottom}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            
                            <Storyboard x:Key="CollapsedToExpandedDownStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlNormalAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="VerticalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Top}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            
                            <Storyboard x:Key="ExpandedDownToCollapsedStoryboard" FillBehavior="Stop">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame
                                        KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                        KeyTime="{StaticResource ControlFastAnimationKeyTime}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationAfterKeyTime}" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationHoldPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="VerticalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static VerticalAlignment.Top}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            
                            <Storyboard x:Key="ExpandedUpStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="MoreButtonTransform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="VerticalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static VerticalAlignment.Bottom}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            
                            <Storyboard x:Key="ExpandedDownStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="VerticalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static VerticalAlignment.Top}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            
                        </Border.Resources>
                        
                        <ikw:ClippedContent
                            x:Name="OuterContentRoot"
                            Height="{TemplateBinding Height}"
                            MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.CurrentWidth}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Top"
                            CornerRadius="{Binding ElementName=LayoutRoot, Path=CornerRadius}">
                            <Grid x:Name="ContentRoot" Background="{TemplateBinding Background}">
                                <Grid.Clip>
                                    <RectangleGeometry x:Name="ContentRootClip" Rect="{Binding Source={StaticResource TemplateSettingsProxy}, Path=FlyoutTemplateSettings.ContentClipRect}">
                                        <RectangleGeometry.Transform>
                                            <!--
                                                If you have a value set by a binding and then animate that value,
                                                the animation will clear the binding.  Because of that, we need to have
                                                two translate transforms - one that we bind to a property,
                                                and another that we can animate.
                                            -->
                                            <TransformGroup>
                                                <TranslateTransform X="{Binding Source={StaticResource TemplateSettingsProxy}, Path=FlyoutTemplateSettings.WidthExpansionDelta}" />
                                                <TranslateTransform x:Name="ContentRootClipTransform" />
                                            </TransformGroup>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                                <Border
                                    x:Name="PrimaryItemsRoot"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" MinWidth="3" />
                                        </Grid.ColumnDefinitions>
                                        <primitives:CommandBarPanel
                                            x:Name="PART_ToolBarPanel"
                                            Grid.Column="0"
                                            Height="40"
                                            Margin="3,3,0,3"
                                            HorizontalAlignment="Left"
                                            IsItemsHost="true"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToggleButton
                                            x:Name="MoreButton"
                                            Grid.Column="1"
                                            ClickMode="Press"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOverflowOpen, Mode=TwoWay}"
                                            IsEnabled="{TemplateBinding HasOverflowItems}"
                                            IsTabStop="False"
                                            Style="{DynamicResource CommandBarFlyoutEllipsisButtonStyle}"
                                            Visibility="{TemplateBinding EffectiveOverflowButtonVisibility}">
                                            <ToggleButton.RenderTransform>
                                                <TranslateTransform x:Name="MoreButtonTransform" X="0"/>
                                            </ToggleButton.RenderTransform>
                                            <ui:FontIcon
                                                x:Name="EllipsisIcon"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                FontSize="16"
                                                Glyph="&#xE712;" />
                                        </ToggleButton>
                                    </Grid>
                                </Border>
                                <ui:PopupEx
                                    x:Name="OverflowPopup"
                                    AllowsTransparency="True"
                                    Focusable="false"
                                    Placement="Bottom"
                                    IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOverflowOpen, Mode=OneWay}"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                    StaysOpen="False">
                                        <Border x:Name="OuterOverflowContentRoot" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}">
                                        <Border.Clip>
                                            <RectangleGeometry x:Name="OuterOverflowContentRootClip" Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OverflowContentClipRect}">
                                                <RectangleGeometry.Transform>
                                                    <TranslateTransform x:Name="OuterOverflowContentRootClipTransform" />
                                                </RectangleGeometry.Transform>
                                            </RectangleGeometry>
                                        </Border.Clip>
                                        <Border
                                            x:Name="OverflowContentRoot"
                                            HorizontalAlignment="Stretch"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{Binding ElementName=OuterOverflowContentRoot, Path=CornerRadius}">
                                            <Border.Clip>
                                                <RectangleGeometry x:Name="OverflowContentRootClip" Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OverflowContentClipRect}">
                                                    <RectangleGeometry.Transform>
                                                        <!--
                                                            If you have a value set by a binding and then animate that value,
                                                            the animation will clear the binding.  Because of that, we need to have
                                                            two translate transforms - one that we bind to a property,
                                                            and another that we can animate.
                                                        -->
                                                        <TransformGroup>
                                                            <TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionDelta}" />
                                                            <TranslateTransform x:Name="OverflowContentRootClipTransform" />
                                                        </TransformGroup>
                                                    </RectangleGeometry.Transform>
                                                </RectangleGeometry>
                                            </Border.Clip>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <primitives:CommandBarOverflowPresenter
                                                    x:Name="SecondaryItemsControl"
                                                    Grid.Row="1"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{DynamicResource CommandBarFlyoutBorderThemeThickness}"
                                                    IsTabStop="False"
                                                    Style="{TemplateBinding OverflowPresenterStyle}">
                                                    <primitives:CommandBarOverflowPanel
                                                        x:Name="PART_ToolBarOverflowPanel"
                                                        FocusVisualStyle="{x:Null}"
                                                        Focusable="False"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Once"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </primitives:CommandBarOverflowPresenter>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </ui:PopupEx>
                            </Grid>
                        </ikw:ClippedContent>
                        
                        <VisualStateManager.CustomVisualStateManager>
                            <ui:SimpleVisualStateManager />
                        </VisualStateManager.CustomVisualStateManager>
                        
                        <VisualStateManager.VisualStateGroups>
                            
                            <VisualStateGroup x:Name="ExpansionStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ExpansionStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="{StaticResource ControlNormalAnimationDuration}"
                                        Storyboard="{StaticResource CollapsedToExpandedUpStoryboard}"
                                        From="Collapsed"
                                        To="ExpandedUp" />
                                    <VisualTransition
                                        GeneratedDuration="{StaticResource ControlFastAnimationDuration}"
                                        Storyboard="{StaticResource ExpandedUpToCollapsedStoryboard}"
                                        From="ExpandedUp"
                                        To="Collapsed" />
                                    <VisualTransition
                                        GeneratedDuration="{StaticResource ControlNormalAnimationDuration}"
                                        Storyboard="{StaticResource CollapsedToExpandedDownStoryboard}"
                                        From="Collapsed"
                                        To="ExpandedDown" />
                                    <VisualTransition
                                        GeneratedDuration="{StaticResource ControlFastAnimationDuration}"
                                        Storyboard="{StaticResource ExpandedDownToCollapsedStoryboard}"
                                        From="ExpandedDown"
                                        To="Collapsed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed"/>
                                <VisualState x:Name="ExpandedUp" Storyboard="{StaticResource ExpandedUpStoryboard}" />
                                <VisualState x:Name="ExpandedDown" Storyboard="{StaticResource ExpandedDownStoryboard}"/>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="AvailableCommandsStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="AvailableCommandsStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="BothCommands" />
                                <VisualState x:Name="PrimaryCommandsOnly" />
                                <VisualState x:Name="SecondaryCommandsOnly" />
                            </VisualStateGroup>
                            
                            <VisualStateGroup>
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CombinedStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Default" />
                                <VisualState x:Name="ExpandedUpWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedUpWithoutPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithoutPrimaryCommands" />
                                
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Default" To="ExpandedUpWithPrimaryCommands" GeneratedDuration="{StaticResource ControlNormalAnimationDuration}">
                                        <Storyboard>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource CommandBarFlyoutBorderUpThemeThickness}" />
                                          </ObjectAnimationUsingKeyFrames>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                          </ObjectAnimationUsingKeyFrames>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                          </ObjectAnimationUsingKeyFrames>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                          </ObjectAnimationUsingKeyFrames>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                          </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    
                                  <VisualTransition From="Default" To="ExpandedDownWithPrimaryCommands" GeneratedDuration="{StaticResource ControlNormalAnimationDuration}">
                                    <Storyboard>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="BorderThickness">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource CommandBarFlyoutBorderDownThemeThickness}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                          <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value, Converter={StaticResource TopCornerRadiusFilterConverter}}"/>
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                      </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                  </VisualTransition>
                                  
                                  <VisualTransition From="ExpandedUpWithPrimaryCommands" To="Default" GeneratedDuration="{StaticResource ControlFastAnimationDuration}">
                                    <Storyboard>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="BorderThickness">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource CommandBarFlyoutBorderUpThemeThickness}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                                      </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                  </VisualTransition>
                                  
                                  <VisualTransition From="ExpandedDownWithPrimaryCommands" To="Default" GeneratedDuration="{StaticResource ControlFastAnimationDuration}">
                                    <Storyboard>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="BorderThickness">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource CommandBarFlyoutBorderDownThemeThickness}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource TopCornerRadiusFilterConverter}, Mode=OneWay}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Mode=OneWay}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource TopCornerRadiusFilterConverter}, Mode=OneWay}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Mode=OneWay}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource BottomCornerRadiusFilterConverter}, Mode=OneWay}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Mode=OneWay}" />
                                      </ObjectAnimationUsingKeyFrames>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Converter={StaticResource BottomCornerRadiusFilterConverter}, Mode=OneWay}" />
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource ControlFastAnimationKeyTime}" Value="{Binding Source={StaticResource CornerRadiusProxy},Path=Value,  Mode=OneWay}" />
                                      </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                  </VisualTransition>
                                  
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="PrimaryLabelStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PrimaryLabelStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NoPrimaryLabels" />
                                <VisualState x:Name="HasPrimaryLabels" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EllipsisIcon" Property="Foreground" Value="{DynamicResource CommandBarEllipsisIconForegroundDisabled}" />
                        </Trigger>
                        
                        <!--  PrimaryCommandsOnly  -->
                        <Trigger SourceName="AvailableCommandsStatesListener" Property="CurrentStateName" Value="PrimaryCommandsOnly">
                            <Setter TargetName="OverflowContentRoot" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--  SecondaryCommandsOnly  -->
                        <!-- We'll use PrimaryItemsRoot as the anchor for the overflow popup, so to be able to do that
                                             we can't set it to be collapsed.  Instead, we'll just hide it and make it not hit-testable. -->
                        <Trigger SourceName="AvailableCommandsStatesListener" Property="CurrentStateName" Value="SecondaryCommandsOnly">
                            <Setter TargetName="PrimaryItemsRoot" Property="Opacity" Value="0" />
                            <Setter TargetName="PrimaryItemsRoot" Property="IsHitTestVisible" Value="False" />
                            <Setter TargetName="PrimaryItemsRoot" Property="Height" Value="0" />
                        </Trigger>

                        <!--  ExpandedUpWithPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedUpWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderUpThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                        </Trigger>
                        <!--  ExpandedDownWithPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedDownWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderDownThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                        </Trigger>
                        <!--  ExpandedUpWithoutPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedUpWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <!--  ExpandedDownWithoutPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedDownWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        
                        <!--  HasPrimaryLabels  -->
                        <Trigger SourceName="PrimaryLabelStatesListener" Property="CurrentStateName" Value="HasPrimaryLabels">
                            <Setter TargetName="PART_ToolBarPanel" Property="MinHeight" Value="52" />
                            <Setter TargetName="PART_ToolBarPanel" Property="Height" Value="NaN" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultCommandBarFlyoutCommandBarStyle" TargetType="primitives:CommandBarFlyoutCommandBar">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="DefaultLabelPosition" Value="Collapsed" />
        <Setter Property="MaxWidth" Value="440" />
        <Setter Property="IsDynamicOverflowEnabled" Value="True" />
        <Setter Property="CommandBarOverflowPresenterStyle" Value="{StaticResource CommandBarFlyoutCommandBarOverflowPresenterStyle}" />
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutCommandBar">
                    <primitives:CommandBarFlyoutToolBar
                        x:Name="PART_ToolBar"
                        Height="{TemplateBinding Height}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        DefaultLabelPosition="{TemplateBinding DefaultLabelPosition}"
                        Foreground="{TemplateBinding Foreground}"
                        IsDynamicOverflowEnabled="{TemplateBinding IsDynamicOverflowEnabled}"
                        IsOverflowOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IsTabStop="{TemplateBinding IsTabStop}"
                        OverflowButtonVisibility="{TemplateBinding OverflowButtonVisibility}"
                        OverflowPresenterStyle="{TemplateBinding CommandBarOverflowPresenterStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultCommandBarFlyoutCommandBarStyle}" TargetType="primitives:CommandBarFlyoutCommandBar" />

</ResourceDictionary>