<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chelper="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Helpers;assembly=iNKORE.UI.WPF.Modern"
    xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern.Controls;component/Controls/Community/SettingsControls/SettingsCard/SettingsCard.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/Controls/ToggleButton.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/Controls/Expander.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/ThemeResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <CornerRadiusConverter x:Key="CornerRadiusConverter" />
    <ikw:BoolInversionConverter x:Key="BoolInversionConverter" />
    <Style
        x:Key="DefaultSettingsExpanderItemStyle"
        BasedOn="{StaticResource DefaultSettingsCardStyle}"
        TargetType="local:SettingsCard">
        <Style.Setters>
            <Setter Property="BorderThickness" Value="{DynamicResource SettingsExpanderItemBorderThickness}" />
            <Setter Property="MinHeight" Value="52" />
            <Setter Property="Padding" Value="{DynamicResource SettingsExpanderItemPadding}" />
            <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />

        </Style.Setters>
    </Style>

    <Style
        x:Key="ClickableSettingsExpanderItemStyle"
        BasedOn="{StaticResource DefaultSettingsExpanderItemStyle}"
        TargetType="local:SettingsCard">
        <Style.Setters>
            <Setter Property="Padding" Value="{DynamicResource ClickableSettingsExpanderItemPadding}" />
        </Style.Setters>
    </Style>

    <local:SettingsExpanderItemStyleSelector
        x:Key="SettingsExpanderItemStyleSelector"
        ClickableStyle="{StaticResource ClickableSettingsExpanderItemStyle}"
        DefaultStyle="{StaticResource DefaultSettingsExpanderItemStyle}" />

    <Style x:Key="SettingsExpanderHeaderDownStyle" TargetType="ToggleButton" 
        BasedOn="{StaticResource {x:Static ui:ThemeKeys.DefaultToggleButtonStyleKey}}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">

                    <Border
                        x:Name="Background"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="True"
                        ui:FocusVisualHelper.IsTemplateFocusTarget="True">
                        <Border
                            x:Name="Border"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ui:ContentPresenterEx Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                <ContentControl x:Name="ExpandCollapseChevronBorder"
                                        Grid.Column="1"
                                        Width="{StaticResource SettingsExpanderChevronButtonWidth}"
                                        Height="{StaticResource SettingsExpanderChevronButtonHeight}"
                                        Margin="0,0,8,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        IsTabStop="False"
                                        ToolTipService.ToolTip="{StaticResource SettingsExpanderChevronToolTip}">
                                    <ui:FontIcon Icon="{x:Static ui:FluentSystemIcons.ChevronDown_16_Regular}"
                                             FontSize="16" RenderTransformOrigin="0.5 0.5">
                                        <FrameworkElement.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                        </FrameworkElement.RenderTransform>
                                    </ui:FontIcon>
                                </ContentControl>
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ikw:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="Top" />
    <ikw:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="Right" />
    <ikw:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="Bottom" />
    <ikw:CornerRadiusFilterConverter x:Key="LeftCornerRadiusFilterConverter" Filter="Left" />

    <ikw:SizeToRectConverter x:Key="SizeToRectConverter" />

    <sys:TimeSpan x:Key="ExpandAnimationDuration">0:0:0.333</sys:TimeSpan>
    <sys:TimeSpan x:Key="CollapseAnimationDuration">0:0:0.167</sys:TimeSpan>

    <Style x:Key="SettingsExpanderExpanderStyle" TargetType="Expander">
        <Setter Property="Background" Value="{DynamicResource ExpanderContentBackground}" />
        <Setter Property="MinWidth" Value="{DynamicResource FlyoutThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentDownBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderContentBorderBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="chelper:ExpanderAnimationsHelper.CollapseAnimationDuration" Value="{DynamicResource CollapseAnimationDuration}" />
        <Setter Property="chelper:ExpanderAnimationsHelper.ExpandAnimationDuration" Value="{DynamicResource ExpandAnimationDuration}" />
        <Setter Property="chelper:ExpanderAnimationsHelper.ToAnimateControlName" Value="ExpanderContent" />
        <Setter Property="chelper:ExpanderAnimationsHelper.IsEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0" Height="Auto" />
                            <RowDefinition x:Name="Row1" Height="*" />
                        </Grid.RowDefinitions>

                        <!--  The clip is a composition clip applied in code  -->
                        <Border x:Name="ExpanderContentClip" Grid.Row="1">

                            <Border.Clip>
                                <RectangleGeometry>
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource SizeToRectConverter}">
                                            <Binding Source="0" />
                                            <Binding Source="0" />
                                            <Binding
                                                Mode="OneWay"
                                                Path="ActualWidth"
                                                RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                            <Binding
                                                ElementName="ContentPresenter"
                                                Mode="OneWay"
                                                Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>

                            <ikw:ClippedContent
                                x:Name="ExpanderContent"
                                MinHeight="{DynamicResource SettingsExpanderContentMinHeight}"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{StaticResource ExpanderContentDownBorderThickness}"
                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius,
                                                               Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                                Visibility="Collapsed">
                                <FrameworkElement.RenderTransform>
                                    <TranslateTransform x:Name="ExpanderContentTranslation" />
                                </FrameworkElement.RenderTransform>
                                <ui:ContentPresenterEx
                                    x:Name="ContentPresenter"
                                    Margin="0,-2,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </ikw:ClippedContent>
                        </Border>

                        <ToggleButton x:Name="ExpanderHeader"
                                      MinHeight="{TemplateBinding MinHeight}"
                                      Padding="0"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}"
                                      VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"
                                      AutomationProperties.AutomationId="ExpanderToggleButton"
                                      AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                      BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                                      BorderThickness="{DynamicResource ExpanderHeaderBorderThickness}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      ui:ControlHelper.CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsEnabled="{TemplateBinding IsEnabled}"
                                      IsTabStop="True"
                                      Style="{StaticResource SettingsExpanderHeaderDownStyle}"
                                      Tag="{TemplateBinding chelper:ControlHelper.CornerRadius}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Down" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Tag, ElementName=ExpanderHeader, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Right" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Tag, ElementName=ExpanderHeader, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Up" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Tag, ElementName=ExpanderHeader, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Left" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Tag, ElementName=ExpanderHeader, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultSettingsExpanderStyle" TargetType="local:SettingsExpander">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource SettingsCardBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource SettingsCardForeground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SettingsCardBorderBrush}" />
            <Setter Property="BorderThickness" Value="{DynamicResource SettingsCardBorderThickness}" />
            <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
            <Setter Property="MinHeight" Value="{DynamicResource SettingsCardMinHeight}" />
            <Setter Property="MinWidth" Value="{DynamicResource SettingsCardMinWidth}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <!--<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />-->
            <Setter Property="Padding" Value="{DynamicResource SettingsExpanderHeaderPadding}" />
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
            <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SettingsExpanderItemStyleSelector}" />
            <!--<Setter Property="FocusVisualMargin" Value="-3" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:SettingsExpander">
                        <Expander
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsExpanded="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource SettingsExpanderExpanderStyle}">
                            <Expander.Header>
                                <local:SettingsCard
                                    Padding="{StaticResource SettingsExpanderHeaderPadding}"
                                    VerticalAlignment="Center"
                                    Background="{x:Null}"
                                    BorderThickness="0"
                                    Content="{TemplateBinding Content}"
                                    Description="{TemplateBinding Description}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Header="{TemplateBinding Header}"
                                    HeaderIcon="{TemplateBinding HeaderIcon}"
                                    IsClickEnabled="False" />
                            </Expander.Header>
                            <Expander.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Content="{TemplateBinding ItemsHeader}" />
                                    <local:ItemsRepeater
                                        x:Name="PART_ItemsRepeater"
                                        Grid.Row="1"
                                        ItemTemplate="{Binding ItemTemplate, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <local:ItemsRepeater.Layout>
                                            <local:StackLayout Orientation="Vertical" />
                                        </local:ItemsRepeater.Layout>
                                    </local:ItemsRepeater>
                                    <!--<ItemsPresenter Grid.Row="1" />-->

                                    <ContentPresenter Grid.Row="2" Content="{TemplateBinding ItemsFooter}" />
                                </Grid>
                            </Expander.Content>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--  Implicitly applied default style  -->
    <Style BasedOn="{StaticResource DefaultSettingsExpanderStyle}" TargetType="local:SettingsExpander" />
</ResourceDictionary>