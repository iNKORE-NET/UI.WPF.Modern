<!--  Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information.  -->
<ui:ResourceDictionaryEx xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern"
                    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls" 
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <ui:ResourceDictionaryEx.MergedDictionaries>
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/Controls/Slider.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/Controls/ComboBox.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/Controls/TextBox.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/Controls/TextStyles.xaml" />
    </ui:ResourceDictionaryEx.MergedDictionaries>

    <Style x:Key="DefaultSettingsCardStyle"
           TargetType="local:SettingsCard">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource SettingsCardBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource SettingsCardForeground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SettingsCardBorderBrush}" />
            <Setter Property="BorderThickness" Value="{DynamicResource SettingsCardBorderThickness}" />
            <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
            <Setter Property="MinHeight" Value="{DynamicResource SettingsCardMinHeight}" />
            <!--<Setter Property="win:AutomationProperties.AutomationControlType" Value="Group" />-->
            <!--<Setter Property="win:AutomationProperties.Name" Value="{TemplateBinding Header}" />-->
            <Setter Property="MinWidth" Value="{DynamicResource SettingsCardMinWidth}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="{DynamicResource SettingsCardPadding}" />
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
            <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:SettingsCard">
                        <ControlTemplate.Resources>
                            <ResourceDictionary>
                                  <!--Making sure ToggleSwitches are right-aligned by default-->  
                                <!--<Style BasedOn="{StaticResource RightAlignedCompactToggleSwitchStyle}"
                                        TargetType="local:ToggleSwitch" />-->

                                <Style TargetType="local:ToggleSwitch">
                                    <Setter Property="IsRightAlignedCompact" Value="True"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                </Style>
                                  <!--Overriding the MinWidth of various types of controls so they neatly align-->  
                                <Style BasedOn="{StaticResource DefaultSliderStyle}"
                               TargetType="Slider">
                                    <Style.Setters>
                                        <Setter Property="MinWidth" Value="{DynamicResource SettingsCardContentMinWidth}" />
                                    </Style.Setters>
                                </Style>
                                <Style BasedOn="{StaticResource DefaultComboBoxStyle}"
                               TargetType="ComboBox">
                                    <Style.Setters>
                                        <Setter Property="MinWidth" Value="{DynamicResource SettingsCardContentMinWidth}" />
                                    </Style.Setters>
                                </Style>
                                <Style BasedOn="{StaticResource DefaultTextBoxStyle}"
                               TargetType="TextBox">
                                    <Style.Setters>
                                        <Setter Property="MinWidth" Value="{DynamicResource SettingsCardContentMinWidth}" />
                                    </Style.Setters>
                                </Style>

                                  <!--NumberBox is not recognized?-->  
                                <Style
                             TargetType="local:NumberBox">
                            <Style.Setters>
                                <Setter Property="MinWidth" Value="{StaticResource SettingsCardContentMinWidth}" />
                            </Style.Setters>
                        </Style>
                            </ResourceDictionary>

                        </ControlTemplate.Resources>
                        <Border x:Name="PART_RootBorder"
                               MinWidth="{TemplateBinding MinWidth}"
                               MinHeight="{TemplateBinding MinHeight}"
                               MaxWidth="{TemplateBinding MaxWidth}"
                               Padding="{TemplateBinding Padding}"
                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalAlignment}"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                               ui:FocusVisualHelper.IsTemplateFocusTarget="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <ui:VisualStateGroupListener.Listener>
                                        <ui:VisualStateGroupListener x:Name="CommonStatesListener" />
                                    </ui:VisualStateGroupListener.Listener>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <!--<VisualState.Setters>
                                                <Setter Target="PART_RootGrid.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                            </VisualState.Setters>-->
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <!--<VisualState.Setters>
                                                <Setter Target="PART_RootGrid.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                            </VisualState.Setters>-->
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <!--<VisualState.Setters>
                                             https://stackoverflow.com/questions/25566944/wpf-theme-error-cannot-resolve-all-property-references-in-the-property-path   -->
                                        <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                                        <!--
                                                <Setter Target="PART_RootGrid.(muxc:AnimatedIcon.State)" Value="Normal" />
                                            </VisualState.Setters>-->
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="ContentAlignmentStates">
                                    <!--  Default  -->
                                    <VisualState x:Name="Right" />

                                    <!--  Whenever the control width is less than SettingsCardWrapThreshold, the Content is below the Header/Description  -->
                                    <VisualState x:Name="RightWrapped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="HorizontalContentAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>-->
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPanel" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Thickness>0,0,0,8</Thickness>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <!--  For even smaller widths: the HeaderIcon is collapsed.  -->
                                    <VisualState x:Name="RightWrappedNoIcon">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenterHolder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Left}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="HorizontalContentAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>-->
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPanel" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Thickness>0,0,0,8</Thickness>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <!--  Header/Description/Icon collapsed, content is to the left. Great for e.g. Checkboxes  -->
                                    <VisualState x:Name="Left">
                                        <Storyboard>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderIconPresenterHolder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HeaderPresenter" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_DescriptionPresenter" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <!--  Similiar to Left, but the HeaderIcon/Header/Description is visible  -->
                                    <VisualState x:Name="Vertical">
                                        <Storyboard>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Int32>1</sys:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:SettingsCard}}" />
                                            </ObjectAnimationUsingKeyFrames>-->

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Thickness>0,5,0,0</Thickness>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>

                                    </VisualState>
                                </VisualStateGroup>

                                <!--  Collapsing the Content presenter whenever it's empty  -->
                                <VisualStateGroup x:Name="ContentVisibilityStates">
                                    <VisualState x:Name="Visible" />
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <!--<VisualStateGroup x:Name="ContentSpacingStates">
                                        <VisualState x:Name="NoContentSpacing" />
                                        <VisualState x:Name="ContentSpacing">
                                            <VisualState.Setters>
                                                <Setter Target="PART_RootGrid.RowSpacing" Value="{DynamicResource SettingsCardVerticalHeaderContentSpacing}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>-->
                            </VisualStateManager.VisualStateGroups>

                            <Grid x:Name="PART_RootGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"
                                        MinWidth="{DynamicResource SettingsCardLeftIndention}" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Viewbox x:Name="PART_HeaderIconPresenterHolder"
                                     Grid.RowSpan="1"
                                     MaxWidth="{DynamicResource SettingsCardHeaderIconMaxSize}"
                                     MaxHeight="{DynamicResource SettingsCardHeaderIconMaxSize}"
                                     Margin="{DynamicResource SettingsCardHeaderIconMargin}">
                                    <ui:ContentPresenterEx x:Name="PART_HeaderIconPresenter"
                                                      Content="{TemplateBinding HeaderIcon}" />
                                </Viewbox>

                                <StackPanel x:Name="HeaderPanel"
                                    Grid.Column="1"
                                    Margin="0,0,24,0"
                                    VerticalAlignment="Center"
                                    Orientation="Vertical">
                                    <ui:ContentPresenterEx x:Name="PART_HeaderPresenter"
                                          Grid.Column="1"
                                          HorizontalAlignment="Left"
                                          Content="{TemplateBinding Header}"
                                          TextWrapping="Wrap" />

                                    <ui:ContentPresenterEx x:Name="PART_DescriptionPresenter"
                                          Content="{TemplateBinding Description}"
                                          FontSize="{DynamicResource SettingsCardDescriptionFontSize}"
                                          Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                          TextWrapping="Wrap">
                                        <ContentPresenter.Resources>
                                            <Style BasedOn="{StaticResource CaptionTextBlockStyle}"
                                                TargetType="TextBlock">
                                                <Style.Setters>
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style.Setters>
                                            </Style>
                                            <Style
                                                TargetType="local:HyperlinkButton">
                                                <Style.Setters>
                                                    <Setter Property="FontSize" Value="{DynamicResource SettingsCardDescriptionFontSize}" />
                                                    <Setter Property="Padding" Value="0,0,0,-1" />
                                                    <Setter Property="FontWeight" Value="SemiBold" />
                                                </Style.Setters>
                                            </Style>
                                            <Style TargetType="Hyperlink">
                                                <Style.Setters>
                                                    <!--<Setter Property="UnderlineStyle" Value="None" />-->
                                                    <Setter Property="TextDecorations" Value="None" />
                                                    <Setter Property="FontWeight" Value="SemiBold" />
                                                </Style.Setters>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ui:ContentPresenterEx>
                                </StackPanel>

                                <ui:ContentPresenterEx x:Name="PART_ContentPresenter"
                                      Grid.Column="2"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Content}" />

                                <Viewbox x:Name="PART_ActionIconPresenterHolder"
                                     Grid.RowSpan="2"
                                     Grid.Column="3"
                                     MaxWidth="{DynamicResource SettingsCardActionIconMaxSize}"
                                     MaxHeight="{DynamicResource SettingsCardActionIconMaxSize}"
                                     Margin="{DynamicResource SettingsCardActionIconMargin}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Visibility="Collapsed">
                                    <ContentPresenter x:Name="PART_ActionIconPresenter"
                                          Content="{TemplateBinding ActionIcon}"
                                          TextElement.FontFamily="{x:Static ui:FluentSystemIcons.FontFamilyRegular}"
                                          ToolTipService.ToolTip="{TemplateBinding ActionIconToolTip}" />
                                </Viewbox>
                            </Grid>
                        </Border>


                        <ControlTemplate.Triggers>
                            <!-- MouseOver State -->
                            <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="PointerOver">
                                <Trigger.Setters>
                                    <Setter TargetName="PART_RootBorder" Property="Background" Value="{DynamicResource SettingsCardBackgroundPointerOver}" />
                                    <Setter TargetName="PART_RootBorder" Property="BorderBrush" Value="{DynamicResource SettingsCardBorderBrushPointerOver}" />
                                    <Setter TargetName="PART_HeaderPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundPointerOver}" />
                                    <Setter TargetName="PART_HeaderIconPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundPointerOver}" />
                                </Trigger.Setters>
                            </Trigger>

                            <!-- Pressed State -->
                            <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Pressed">
                                <Setter TargetName="PART_RootBorder" Property="Background" Value="{DynamicResource SettingsCardBackgroundPressed}" />
                                <Setter TargetName="PART_RootBorder" Property="BorderBrush" Value="{DynamicResource SettingsCardBorderBrushPressed}" />
                                <Setter TargetName="PART_HeaderIconPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundPressed}" />
                                <Setter TargetName="PART_HeaderPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundPressed}" />
                                <Setter TargetName="PART_DescriptionPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundPressed}" />
                            </Trigger>

                            <!-- Disabled State -->
                            <Trigger  SourceName="CommonStatesListener" Property="CurrentStateName" Value="Disabled">
                                <Setter TargetName="PART_ActionIconPresenter" Property="TextElement.Foreground" Value="{DynamicResource SettingsCardForegroundDisabled}" />
                                <Setter TargetName="PART_HeaderIconPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundDisabled}" />
                                <Setter TargetName="PART_HeaderPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundDisabled}" />
                                <Setter TargetName="PART_DescriptionPresenter" Property="Foreground" Value="{DynamicResource SettingsCardForegroundDisabled}" />
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    
    <Style BasedOn="{StaticResource DefaultSettingsCardStyle}"
           TargetType="local:SettingsCard" />

</ui:ResourceDictionaryEx>
