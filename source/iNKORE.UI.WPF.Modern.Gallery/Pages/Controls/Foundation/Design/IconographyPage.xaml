<!--  Copyright (c) Microsoft Corporation and Contributors.  -->
<!--  Licensed under the MIT License.  -->

<ui:Page x:Class="iNKORE.UI.WPF.Modern.Gallery.Pages.Controls.Foundation.IconographyPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Gallery"
    xmlns:models="clr-namespace:iNKORE.UI.WPF.Modern.Gallery.DataModel"
    xmlns:helpers="clr-namespace:iNKORE.UI.WPF.Modern.Gallery.Helpers"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern"
    xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    x:Name="iconographyPage"
    mc:Ignorable="d" d:DesignHeight="1122.907" d:DesignWidth="1047.333">

    <FrameworkElement.Resources>
        <DataTemplate x:Key="IconTemplate" DataType="{x:Type models:IconData}">
            <Border Width="96" Height="96" CornerRadius="{DynamicResource ControlCornerRadius}" ToolTipService.ToolTip="{Binding Name}">
                <!--<Border Background="{DynamicResource CardBackgroundFillColorDefaultBrush}" BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}" BorderThickness="1" CornerRadius="{DynamicResource ControlCornerRadius}">-->
                <Border>
                    <Grid>
                        <Viewbox Width="28" Height="28" Stretch="Uniform" Margin="0,0,0,16">
                            <!--<TextBlock x:Name="IconGlyph" FontFamily="{Binding FontFamily}" Text="{Binding Character}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>-->
                            <ui:FontIcon FontFamily="{Binding FontFamily}" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Glyph="{Binding Glyph}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Viewbox>
                        <TextBlock x:Name="IconName" Margin="8,0,8,8" HorizontalAlignment="Center" VerticalAlignment="Bottom" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{DynamicResource CaptionTextBlockStyle}" Text="{Binding Name}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                    </Grid>
                </Border>
            </Border>
        </DataTemplate>

        <!-- Local tag chip Button style: uses a simple Border in the ControlTemplate
             and only changes visual properties that do not affect layout (opacity).
             This preserves keyboard/automation semantics of Button while avoiding
             measured-size changes from system Button templates. -->
        <Style x:Key="TagChipButtonStyle" TargetType="Button">
            <!-- Button is the single visual for the chip: background, border, corner radius -->
            <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10,4" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="44" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="RootBorder"
                                MinHeight="24"
                                MinWidth="44"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="0"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RootBorder" Property="Opacity" Value="0.95" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="RootBorder" Property="Opacity" Value="0.85" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="RootBorder" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </FrameworkElement.Resources>

    <!--
        VisualStateManager groups live on the top-level LayoutRoot so
        VisualStateManager.GoToElementState(LayoutRoot, "StateName", true)
        can find and activate the states. Keep animation target element
        names unique and in the same namescope as LayoutRoot so Storyboards
        can resolve them at runtime.
    -->
    <ikw:SimpleStackPanel x:Name="LayoutRoot">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ControlCornerRadiusCopyButtonStates">
                <VisualState x:Name="ControlCornerRadiusCopyButtonHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                         Storyboard.TargetName="FontIcon_ControlCornerRadiusCopyButton_Success"
                                         Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                         Storyboard.TargetName="ScaleTransform_ControlCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                         Storyboard.TargetName="FontIcon_ControlCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ControlCornerRadiusCopyButtonVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                         Storyboard.TargetName="ScaleTransform_ControlCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                         Storyboard.TargetName="FontIcon_ControlCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                         Storyboard.TargetName="ScaleTransform_ControlCornerRadiusCopyButton_Success"
                                         Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                         Storyboard.TargetName="FontIcon_ControlCornerRadiusCopyButton_Success"
                                         Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <!-- Per-button copy visual states for side-panel copy buttons.
                     Each group targets the named FontIcon/ScaleTransform elements
                     that are defined alongside each Button below. The code-behind
                     will compute the state name from the clicked Button's x:Name
                     (e.g. Button x:Name="CopyXamlButton" -> state "CopyXamlVisible"). -->
            <VisualStateGroup x:Name="CopyNameButtonStates">
                <VisualState x:Name="CopyNameHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyName_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyName_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyName_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopyNameVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopyName_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyName_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyName_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyName_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CopyTextGlyphButtonStates">
                <VisualState x:Name="CopyTextGlyphHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyTextGlyph_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyTextGlyph_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyTextGlyph_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopyTextGlyphVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopyTextGlyph_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyTextGlyph_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyTextGlyph_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyTextGlyph_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CopyCodeGlyphButtonStates">
                <VisualState x:Name="CopyCodeGlyphHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyCodeGlyph_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyCodeGlyph_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyCodeGlyph_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopyCodeGlyphVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopyCodeGlyph_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyCodeGlyph_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyCodeGlyph_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyCodeGlyph_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CopyXamlButtonStates">
                <VisualState x:Name="CopyXamlHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyXaml_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyXaml_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyXaml_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopyXamlVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopyXaml_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyXaml_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyXaml_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyXaml_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CopyInlineExampleButtonStates">
                <VisualState x:Name="CopyInlineExampleHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyInlineExample_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyInlineExample_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyInlineExample_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopyInlineExampleVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopyInlineExample_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyInlineExample_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyInlineExample_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyInlineExample_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CopyCSharpButtonStates">
                <VisualState x:Name="CopyCSharpHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyCSharp_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyCSharp_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyCSharp_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopyCSharpVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopyCSharp_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopyCSharp_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopyCSharp_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopyCSharp_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CopySymbolXamlButtonStates">
                <VisualState x:Name="CopySymbolXamlHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopySymbolXaml_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopySymbolXaml_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopySymbolXaml_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopySymbolXamlVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopySymbolXaml_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopySymbolXaml_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopySymbolXaml_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopySymbolXaml_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CopySymbolCSharpButtonStates">
                <VisualState x:Name="CopySymbolCSharpHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="FontIcon_CopySymbolCSharp_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopySymbolCSharp_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="FontIcon_CopySymbolCSharp_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CopySymbolCSharpVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                             Storyboard.TargetName="ScaleTransform_CopySymbolCSharp_Copy"
                                             Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                             Storyboard.TargetName="FontIcon_CopySymbolCSharp_Copy"
                                             Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                             Storyboard.TargetName="ScaleTransform_CopySymbolCSharp_Success"
                                             Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                             Storyboard.TargetName="FontIcon_CopySymbolCSharp_Success"
                                             Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="OverlayCornerRadiusCopyButtonStates">
                <VisualState x:Name="OverlayCornerRadiusCopyButtonHidden">
                    <Storyboard>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="0" 
                                         Storyboard.TargetName="FontIcon_OverlayCornerRadiusCopyButton_Success"
                                         Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation Duration="00:00:00:0" To="1" 
                                         Storyboard.TargetName="ScaleTransform_OverlayCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                         Storyboard.TargetName="FontIcon_OverlayCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OverlayCornerRadiusCopyButtonVisible">
                    <Storyboard>
                        <DoubleAnimation Duration="00:00:00:0.15" To="0" 
                                         Storyboard.TargetName="ScaleTransform_OverlayCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation BeginTime="00:00:00:0.1" Duration="00:00:00:0.01" To="0" 
                                         Storyboard.TargetName="FontIcon_OverlayCornerRadiusCopyButton_Copy"
                                         Storyboard.TargetProperty="Opacity"/>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.15" To="1" 
                                         Storyboard.TargetName="ScaleTransform_OverlayCornerRadiusCopyButton_Success"
                                         Storyboard.TargetProperty="ScaleX">
                            <DoubleAnimation.EasingFunction>
                                <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation BeginTime="00:00:00:0.15" Duration="00:00:00:0.015" To="1" 
                                         Storyboard.TargetName="FontIcon_OverlayCornerRadiusCopyButton_Success"
                                         Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <StackPanel Grid.Row="0" Orientation="Vertical">
            <ui:SettingsExpander Margin="0,0,0,20" Header="Iconography in iUWM">
                <ui:SettingsExpander.Items>
                    <ui:SettingsCard Header="Overview" FontWeight="SemiBold">
                        <ui:SettingsCard.Description>
                            <StackPanel Orientation="Vertical" Margin="0">
                                <TextBlock TextWrapping="Wrap" FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}">
                                    iUWM provides a unified icon system that supports multiple sets, including Segoe Fluent Icons, Fluent System Icons, and Segoe MDL2. These icons are optimized for Fluent Design principles ensuring clarity, scale, and theme consistency across your WPF applications.
                                </TextBlock>
                                <TextBlock Margin="0,6,0,0" TextWrapping="Wrap" FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}">
                                    Learn more in the
                                    <InlineUIContainer BaselineAlignment="Center">
                                        <ui:HyperlinkButton
                                            NavigateUri="https://docs.inkore.net/en-us/ui-wpf-modern/introduction/"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            Padding="0,1,0,0"
                                            FontWeight="Normal"
                                            FontFamily="{DynamicResource ContentControlThemeFontFamily}"
                                            FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}">
                                            <TextBlock Text="documentation"
                                                       TextDecorations="Underline"
                                                       FontWeight="Normal"
                                                       FontFamily="{DynamicResource ContentControlThemeFontFamily}"
                                                       FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}" />
                                        </ui:HyperlinkButton>
                                    </InlineUIContainer>.
                                </TextBlock>
                            </StackPanel>
                        </ui:SettingsCard.Description>
                    </ui:SettingsCard>

                    <ui:SettingsCard Header="How it works" FontWeight="SemiBold">
                        <ui:SettingsCard.Description>
                            <StackPanel Orientation="Vertical" Margin="0">
                                <TextBlock TextWrapping="Wrap" FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}">
                                    Use <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">ui:FontIcon</Run> with icon keys, such as <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">SegoeFluentIcons.Delete</Run> or <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">FluentSystemIcons.Regular.Edit</Run>. When you set the <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">Icon</Run> property, the correct <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">FontFamily</Run> is applied automatically for the selected icon set.
                                </TextBlock>
                                <TextBlock Margin="0,0,0,0" TextWrapping="Wrap" FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}">
                                    If you don't specify a <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">FontFamily</Run>, or you specify a <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">FontFamily</Run> that isn't available on the system at runtime, <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">FontIcon</Run> falls back to the default font family defined by the <Run FontFamily="{DynamicResource ContentControlThemeFontFamily}">SymbolThemeFontFamily</Run> resource.
                                </TextBlock>
                                <TextBlock Margin="0,0,0,0" TextWrapping="Wrap" FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}">
                                    An icon rendered at a font size of 16 epx is equivalent to a 16x16 epx bitmap. For best clarity, use these sizes: 16, 20, 24, 32, 40, 48, and 64. Using other sizes can result in softer or blurry rendering.
                                </TextBlock>
                                <TextBlock Margin="0,0,0,0" TextWrapping="Wrap" FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}">
                                    All glyphs in Segoe Fluent Icons use a fixed width with a consistent height and left origin point. You can layer and colorize multiple glyphs by drawing them directly on top of each other.
                                </TextBlock>

                                <Grid HorizontalAlignment="Stretch" Margin="0,8,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Row="0" Grid.Column="0" x:Name="InlineExampleBox" Margin="0" FontFamily="Consolas" FontSize="{DynamicResource {x:Static ui:ThemeKeys.BodyTextBlockFontSizeKey}}" FontWeight="Normal" IsReadOnly="True" Background="Transparent" BorderThickness="0" Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                         AcceptsReturn="True" AcceptsTab="True" TextWrapping="NoWrap" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" MinHeight="50" xml:space="preserve" TextAlignment="Left"
                                         HorizontalAlignment="Stretch"
                                         Text="&lt;ui:FontIcon Icon=&quot;{x:Static ui:SegoeFluentIcons.Edit}&quot; /&gt;&#x0a;&lt;ui:FontIcon Icon=&quot;{x:Static ui:FluentSystemIcons.Regular.Edit}&quot; /&gt;" />
                                    <Button x:Name="CopyInlineExampleButton" Grid.Row="0" Grid.Column="1" Margin="8,0,8,20" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding Text, ElementName=InlineExampleBox}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopyInlineExample_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyInlineExample_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopyInlineExample_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5" Opacity="0">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyInlineExample_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>
                            </StackPanel>
                        </ui:SettingsCard.Description>
                    </ui:SettingsCard>
                </ui:SettingsExpander.Items>
            </ui:SettingsExpander>
            <StackPanel Orientation="Horizontal" Margin="0,16,0,10" HorizontalAlignment="Left">
                <ui:AutoSuggestBox
                x:Name="IconsSearchBox"
                MinWidth="304"
                MaxWidth="320"
                HorizontalAlignment="Left"
                PlaceholderText="Search icons by name"
                TextChanged="SearchTextBox_TextChanged">
                    <ui:AutoSuggestBox.Header>
                        <TextBlock Text="Fluent Icons Library" FontWeight="SemiBold" />
                    </ui:AutoSuggestBox.Header>
                    <ui:AutoSuggestBox.QueryIcon>
                        <ui:FontIcon Icon="{x:Static ui:SegoeFluentIcons.Search}" />
                    </ui:AutoSuggestBox.QueryIcon>
                </ui:AutoSuggestBox>

                <ComboBox x:Name="IconSetComboBox" MinWidth="200" MaxWidth="320" HorizontalAlignment="Left" Margin="12,0,0,0" VerticalAlignment="Bottom" />
            </StackPanel>
        </StackPanel>

        <Border x:Name="ExampleContainerBorder" Grid.Row="1" Background="{DynamicResource ControlExampleDisplayBrush}" CornerRadius="8" MaxHeight="600">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="334" />
                </Grid.ColumnDefinitions>

                <ui:ItemsRepeaterScrollHost>
                    <!-- Disable horizontal scrolling so the repeater is constrained to the page width
                        and the FlowLayout can wrap items correctly. Keep vertical scrolling enabled. -->
                    <ui:ScrollViewerEx HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <ui:ItemsRepeater x:Name="IconsItemsView" Margin="5" HorizontalAlignment="Stretch">
                            <ui:ItemsRepeater.ItemTemplate>
                                <DataTemplate>
                                    <Button Margin="4" Padding="0"
                                        Tag="IconItemContainer"
                                        Click="IconsItemsView_ItemClicked"
                                        Background="{DynamicResource CardBackgroundFillColorDefaultBrush}" 
                                        BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"                                        
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center">
                                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource IconTemplate}"/>
                                    </Button>
                                </DataTemplate>
                            </ui:ItemsRepeater.ItemTemplate>

                            <ui:ItemsRepeater.Layout>
                                <ui:FlowLayout Orientation="Horizontal"/>
                            </ui:ItemsRepeater.Layout>
                        </ui:ItemsRepeater>
                    </ui:ScrollViewerEx>
                </ui:ItemsRepeaterScrollHost>

                <Border x:Name="SidePanel" Grid.Column="1" Background="{DynamicResource CardBackgroundFillColorDefaultBrush}" BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}" BorderThickness="{DynamicResource ControlExampleDisplayBorderThickness}" DataContext="{Binding}" CornerRadius="0,8,8,0" Visibility="Collapsed">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ikw:SimpleStackPanel Margin="16,8,8,16" Spacing="5">
                            <Grid Margin="0,0,0,15" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Border Margin="-10,0,8,0" Padding="8" HorizontalAlignment="Left">
                                    <TextBlock FontFamily="{Binding SelectedItem.FontFamily, Mode=OneWay}" FontSize="48" Text="{Binding SelectedItem.Glyph, Mode=OneWay}" Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                </Border>
                                <Grid Grid.Column="1" HorizontalAlignment="Stretch" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                </Grid>
                            </Grid>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="Icon name" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding SelectedItem.Name, Mode=OneWay}" FontFamily="Consolas" Margin="-10,-10,0,0"
                                            FontSize="{DynamicResource ControlContentThemeFontSize}"
                                            IsReadOnly="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            IsReadOnlyCaretVisible="False"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalScrollBarVisibility="Hidden"
                                            TextWrapping="NoWrap"
                                            MinWidth="120" />
                                    <Button x:Name="CopyNameButton" Grid.Column="1" Margin="8,0,8,0" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding SelectedItem.Name, Mode=OneWay}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopyName_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyName_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopyName_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyName_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>
                            </StackPanel>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="Text glyph" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding SelectedItem.TextGlyph, Mode=OneWay}" FontFamily="Consolas" Margin="-10,-10,0,0"
                                            FontSize="{DynamicResource ControlContentThemeFontSize}"
                                            IsReadOnly="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            IsReadOnlyCaretVisible="False"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalScrollBarVisibility="Hidden"
                                            TextWrapping="NoWrap"
                                            MinWidth="120"/>
                                    <Button x:Name="CopyTextGlyphButton" Grid.Column="1" Margin="8,0,8,0" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding SelectedItem.TextGlyph, Mode=OneWay}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopyTextGlyph_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyTextGlyph_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopyTextGlyph_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyTextGlyph_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>
                            </StackPanel>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="Code glyph" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding SelectedItem.CodeGlyph, Mode=OneWay}" FontFamily="Consolas" Margin="-10,-10,0,0"
                                            FontSize="{DynamicResource ControlContentThemeFontSize}"
                                            IsReadOnly="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            IsReadOnlyCaretVisible="False"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalScrollBarVisibility="Hidden"
                                            TextWrapping="NoWrap"
                                            MinWidth="120"/>
                                    <Button x:Name="CopyCodeGlyphButton" Grid.Column="1" Margin="8,0,8,0" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding SelectedItem.CodeGlyph, Mode=OneWay}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopyCodeGlyph_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyCodeGlyph_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopyCodeGlyph_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyCodeGlyph_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>
                            </StackPanel>

                            <!-- XAML -->
                            <StackPanel Orientation="Vertical">
                                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="XAML" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="FontIconXamlBox" Text="{Binding FontIconXaml, Mode=OneWay}" FontFamily="Consolas" Margin="-6,-5,0,0"
                                            FontSize="12"
                                            IsReadOnly="True"
                                            AcceptsReturn="True"
                                            AcceptsTab="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            IsReadOnlyCaretVisible="False"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalScrollBarVisibility="Auto"
                                            VerticalScrollBarVisibility="Auto"
                                            TextWrapping="Wrap"
                                            MinWidth="120"
                                            Padding="6"/>
                                    <Button x:Name="CopyXamlButton" Grid.Column="1" Margin="8,0,8,0" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding FontIconXaml, Mode=OneWay}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopyXaml_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyXaml_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopyXaml_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyXaml_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>
                            </StackPanel>

                            <!-- C# -->
                            <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="C#" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="FontIconCSharpBox" Text="{Binding FontIconCSharp, Mode=OneWay}" FontFamily="Consolas" Margin="-6,-5,0,0"
                                            FontSize="12"
                                            IsReadOnly="True"
                                            AcceptsReturn="True"
                                            AcceptsTab="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            IsReadOnlyCaretVisible="False"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalScrollBarVisibility="Auto"
                                            VerticalScrollBarVisibility="Auto"
                                            TextWrapping="Wrap"
                                            MinWidth="120"
                                            Padding="6"/>
                                    <Button x:Name="CopyCSharpButton" Grid.Column="1" Margin="8,0,8,0" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding FontIconCSharp, Mode=OneWay}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopyCSharp_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyCSharp_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopyCSharp_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopyCSharp_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>
                            </StackPanel>

                            <StackPanel x:Name="SymbolPanel">
                                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="SymbolIcon XAML" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="SymbolIconXamlBox" Text="{Binding SymbolIconXaml, Mode=OneWay}" FontFamily="Consolas" Margin="-6,-5,0,0"
                                            FontSize="{DynamicResource ControlContentThemeFontSize}"
                                            IsReadOnly="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            IsReadOnlyCaretVisible="False"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalScrollBarVisibility="Hidden"
                                            TextWrapping="NoWrap"
                                            MinWidth="120"/>
                                    <Button x:Name="CopySymbolXamlButton" Grid.Column="1" Margin="8,0,8,0" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding SymbolIconXaml, Mode=OneWay}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopySymbolXaml_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopySymbolXaml_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopySymbolXaml_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopySymbolXaml_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>

                                <TextBlock Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="SymbolIcon C#" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="SymbolIconCSharpBox" Text="{Binding SymbolIconCSharp, Mode=OneWay}" FontFamily="Consolas" Margin="-6,-5,0,0"
                                            FontSize="{DynamicResource ControlContentThemeFontSize}"
                                            IsReadOnly="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            IsReadOnlyCaretVisible="False"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalScrollBarVisibility="Hidden"
                                            TextWrapping="NoWrap"
                                            MinWidth="120"/>
                                    <Button x:Name="CopySymbolCSharpButton" Grid.Column="1" Margin="8,0,8,0" Padding="6" Click="CopyValueButton_Click" ToolTipService.ToolTip="Copy to clipboard" AutomationProperties.Name="Copy value" Tag="{Binding SymbolIconCSharp, Mode=OneWay}">
                                        <Grid>
                                            <ui:FontIcon x:Name="FontIcon_CopySymbolCSharp_Copy" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.Copy}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopySymbolCSharp_Copy" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                            <ui:FontIcon x:Name="FontIcon_CopySymbolCSharp_Success" FontSize="16" Icon="{x:Static ui:SegoeFluentIcons.CheckMark}" RenderTransformOrigin="0.5 0.5">
                                                <FrameworkElement.RenderTransform>
                                                    <ScaleTransform x:Name="ScaleTransform_CopySymbolCSharp_Success" ScaleX="0" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
                                                </FrameworkElement.RenderTransform>
                                            </ui:FontIcon>
                                        </Grid>
                                    </Button>
                                </Grid>
                            </StackPanel>

                            <TextBlock x:Name="TagsLabel" Margin="0,4,0,0" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}" Text="Tags" />
                            <ui:ItemsRepeater x:Name="TagsItemsView" Margin="0,8,0,4" ItemsSource="{Binding SelectedItem.Tags, Mode=OneWay}">
                                <ui:ItemsRepeater.Layout>
                                    <ui:FlowLayout Orientation="Horizontal" MinColumnSpacing="8" MinRowSpacing="6"/>
                                </ui:ItemsRepeater.Layout>
                                <ui:ItemsRepeater.ItemTemplate>
                                    <DataTemplate>
                                        <Button Style="{StaticResource TagChipButtonStyle}"
                                            Click="TagButton_Click"
                                            MinHeight="24"
                                            MinWidth="44"
                                            HorizontalAlignment="Left"
                                            ToolTipService.ToolTip="{Binding}">
                                            <TextBlock VerticalAlignment="Center"
                                                    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                    Text="{Binding}"
                                                    TextTrimming="CharacterEllipsis"
                                                    TextWrapping="NoWrap" />
                                        </Button>
                                    </DataTemplate>
                                </ui:ItemsRepeater.ItemTemplate>
                            </ui:ItemsRepeater>
                            <!--<TextBlock x:Name="NoTagsTextBlock" Foreground="{DynamicResource TextFillColorPrimaryBrush}" Grid.Row="1" Margin="0,-5,0,0" Text="No tags available." Visibility="Collapsed" />-->
                        </ikw:SimpleStackPanel>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Border>
    </ikw:SimpleStackPanel>
</ui:Page>
