<ui:Page
    x:Class="iNKORE.UI.WPF.Modern.Gallery.Pages.Controls.Windows.InfoBarPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Gallery"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern"
    Title="InfoBar Page"
    d:DesignWidth="800"
    mc:Ignorable="d"
    Loaded="Page_Loaded">
    <StackPanel>
        <local:ControlExample x:Name="Example1" HeaderText="A closable InfoBar with options to change its Severity.">
            <local:ControlExample.Resources>
                <ResourceDictionary>
                    <ui:BindingProxy x:Key="SeverityComboBox" Value="{x:Reference SeverityComboBox}" />
                    <ui:BindingProxy x:Key="IsOpenCheckBox1" Value="{x:Reference IsOpenCheckBox1}" />
                </ResourceDictionary>
            </local:ControlExample.Resources>
            <local:ControlExample.Example>
                <ui:InfoBar
                    x:Name="TestInfoBar1"
                    Title="Title"
                    IsOpen="True"
                    Message="Essential app message for your users to be informed of, acknowledge, or take action on."
                    Severity="Informational" 
                    Closed="InfoBar_Closed"/>

            </local:ControlExample.Example>
            <local:ControlExample.Options>
                <StackPanel Width="150">
                    <CheckBox
                        x:Name="IsOpenCheckBox1"
                        Content="Is Open"
                        IsChecked="{Binding IsOpen, ElementName=TestInfoBar1, Mode=TwoWay}" 
                        Click="CheckBox_Click"/>
                    <ComboBox
                        x:Name="SeverityComboBox"
                        HorizontalAlignment="Stretch"
                        ui:ControlHelper.Header="Severity"
                        SelectedValue="Informational"
                        SelectionChanged="SeverityComboBox_SelectionChanged">
                        <sys:String>Informational</sys:String>
                        <sys:String>Success</sys:String>
                        <sys:String>Warning</sys:String>
                        <sys:String>Error</sys:String>
                    </ComboBox>
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="Severity" Value="{Binding Value.SelectedValue, Source={StaticResource SeverityComboBox}, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="IsOpen" Value="{Binding Value.IsChecked, Source={StaticResource IsOpenCheckBox1}, Mode=OneWay}" />
            </local:ControlExample.Substitutions>
        </local:ControlExample>
        <local:ControlExample x:Name="Example2" HeaderText="A closable InfoBar with a long or short message and various buttons">
            <local:ControlExample.Resources>
                <ResourceDictionary>
                    <ui:BindingProxy x:Key="IsOpenCheckBox2" Value="{x:Reference IsOpenCheckBox2}" />
                </ResourceDictionary>
            </local:ControlExample.Resources>
            <local:ControlExample.Example>
                <ui:InfoBar
                    x:Name="TestInfoBar2"
                    Title="Title"
                    IsOpen="True" />
            </local:ControlExample.Example>
            <local:ControlExample.Options>
                <StackPanel Width="150">
                    <CheckBox
                        x:Name="IsOpenCheckBox2"
                        Content="Is Open"
                        IsChecked="{Binding IsOpen, ElementName=TestInfoBar2, Mode=TwoWay}"                         
                        Click="CheckBox_Click"/>

                    <ComboBox
                        x:Name="MessageComboBox"
                        HorizontalAlignment="Stretch"
                        ui:ControlHelper.Header="Message Length"
                        SelectedIndex="1"
                        SelectionChanged="MessageComboBox_SelectionChanged">
                        <ComboBoxItem Content="Short" />
                        <ComboBoxItem Content="Long" />
                    </ComboBox>
                    <ComboBox
                        x:Name="ActionButtonComboBox"
                        HorizontalAlignment="Stretch"
                        ui:ControlHelper.Header="Action Button"
                        SelectedIndex="0"
                        SelectionChanged="ActionButtonComboBox_SelectionChanged">
                        <ComboBoxItem Content="None" />
                        <ComboBoxItem Content="Button" />
                        <ComboBoxItem Content="Hyperlink" />
                    </ComboBox>
                </StackPanel>
            </local:ControlExample.Options>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="IsOpen" Value="{Binding Value.IsChecked, Source={StaticResource IsOpenCheckBox2}, Mode=OneWay}" />
            </local:ControlExample.Substitutions>
        </local:ControlExample>
        <local:ControlExample x:Name="Example3" HeaderText="A closable InfoBar with options to display the close button and icon">
            <local:ControlExample.Resources>
                <ResourceDictionary>
                    <ui:BindingProxy x:Key="IsOpenCheckBox3" Value="{x:Reference IsOpenCheckBox3}" />
                    <ui:BindingProxy x:Key="IsIconVisibleCheckBox" Value="{x:Reference IsIconVisibleCheckBox}" />
                    <ui:BindingProxy x:Key="IsClosableCheckBox" Value="{x:Reference IsClosableCheckBox}" />
                </ResourceDictionary>
            </local:ControlExample.Resources>
            <local:ControlExample.Example>
                <ui:InfoBar
                    x:Name="TestInfoBar3"
                    Title="Title"
                    IsClosable="True"
                    IsIconVisible="True"
                    IsOpen="True"
                    Message="Essential app message for your users to be informed of, acknowledge, or take action on." />
            </local:ControlExample.Example>
            <local:ControlExample.Options>
                <StackPanel Width="150">
                    <CheckBox
                        x:Name="IsOpenCheckBox3"
                        Content="Is Open"
                        IsChecked="{Binding IsOpen, ElementName=TestInfoBar3, Mode=TwoWay}"
                        Click="CheckBox_Click"/>

                    <CheckBox
                        x:Name="IsIconVisibleCheckBox"
                        Content="Is Icon Visible"
                        IsChecked="{Binding IsIconVisible, ElementName=TestInfoBar3, Mode=TwoWay}"
                        Click="CheckBox_Click"/>
                    <CheckBox
                        x:Name="IsClosableCheckBox"
                        Content="Is Closable"
                        IsChecked="{Binding IsClosable, ElementName=TestInfoBar3, Mode=TwoWay}"
                        Click="CheckBox_Click"/>
                </StackPanel>
            </local:ControlExample.Options>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="IsOpen" Value="{Binding Value.IsChecked, Source={StaticResource IsOpenCheckBox3}, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="IsIconVisible" Value="{Binding Value.IsChecked, Source={StaticResource IsIconVisibleCheckBox}, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="IsClosable" Value="{Binding Value.IsChecked, Source={StaticResource IsClosableCheckBox}, Mode=OneWay}" />
            </local:ControlExample.Substitutions>
        </local:ControlExample>
    </StackPanel>
</ui:Page>
