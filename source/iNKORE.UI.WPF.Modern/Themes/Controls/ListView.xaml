<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls"
    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Primitives"
    xmlns:converters="clr-namespace:iNKORE.UI.WPF.Modern.Common.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:chelper="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Helpers"
    xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    xmlns:common="clr-namespace:iNKORE.UI.WPF.Modern.Common">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <ikw:CornerRadiusExtractionConverter x:Key="TopLeftCornerRadiusDoubleValueConverter" TargetMember="TopLeft" />
            <ikw:CornerRadiusExtractionConverter x:Key="BottomRightCornerRadiusDoubleValueConverter" TargetMember="BottomRight" />
            <primitives:BindingProxy x:Key="ListViewItemSelectionIndicatorCornerRadiusProxy" Value="{DynamicResource ListViewItemSelectionIndicatorCornerRadius}" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="{DynamicResource ListViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ListViewItemForeground}" />
        <Setter Property="Padding" Value="12,0,12,0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="MinWidth" Value="{DynamicResource ListViewItemMinWidth}" />
        <Setter Property="MinHeight" Value="{DynamicResource ListViewItemMinHeight}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="chelper:ControlHelper.CornerRadius" Value="{DynamicResource ListViewItemCornerRadius}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="chelper:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border
                        x:Name="LayoutRoot"
                        Margin="{DynamicResource ListViewItemCompactSelectedBorderThemeThickness}"
                        chelper:PressHelper.IsEnabled="True"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid x:Name="PressedBackgroundGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.5*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="0.5*" />
                                </Grid.RowDefinitions>
                                <Rectangle
                                    x:Name="PressedBackground"
                                    Grid.Row="1"
                                    Width="3.5"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Stretch"
                                    Fill="{DynamicResource ListViewItemSelectionIndicatorBrush}"
                                    Opacity="0"
                                    RadiusX="{Binding Value, Source={StaticResource ListViewItemSelectionIndicatorCornerRadiusProxy}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                    RadiusY="{Binding Value, Source={StaticResource ListViewItemSelectionIndicatorCornerRadiusProxy}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <ScaleTransform x:Name="PillTransform" ScaleY="1" />
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                            <Grid
                                x:Name="ContentPresenterGrid"
                                Margin="0,0,0,0"
                                Background="Transparent">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                </Grid.RenderTransform>
                                <local:ContentPresenterEx
                                    x:Name="ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <Border
                                x:Name="MultiSelectSquare"
                                Width="{DynamicResource CheckBoxSize}"
                                Height="{DynamicResource CheckBoxSize}"
                                Margin="12,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{DynamicResource ListViewItemCheckBoxBrush}"
                                BorderBrush="{DynamicResource ListViewItemCheckBoxBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="{DynamicResource ListViewItemCheckBoxCornerRadius}"
                                Visibility="Collapsed">
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,20,20">
                                        <RectangleGeometry.Transform>
                                            <TranslateTransform x:Name="MultiSelectClipTransform" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Border.Clip>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
                                </Border.RenderTransform>
                                <local:FontIcon
                                    x:Name="MultiSelectCheck"
                                    FontFamily="{DynamicResource FluentSystemIconsFilled}"
                                    FontSize="{DynamicResource CheckBoxGlyphSize}"
                                    Glyph="{DynamicResource CheckBoxCheckedGlyph}"
                                    Opacity="0"
                                    Visibility="Collapsed" />
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                                            <SplineDoubleKeyFrame
                                                KeySpline="1,0,0,0"
                                                KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0,1"
                                                KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                Value="{DynamicResource ListViewItemPillMinScale}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="{DynamicResource ListViewItemPillMinScale}" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0,1"
                                                KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MultiSelectStates">
                                <VisualState x:Name="MultiSelectDisabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9,0.2,1"
                                                KeyTime="0:0:0.333"
                                                Value="-32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9,0.2,1"
                                                KeyTime="0:0:0.333"
                                                Value="32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9,0.2,1"
                                                KeyTime="0:0:0.333"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackgroundGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultiSelectEnabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9,0.2,1"
                                                KeyTime="0:0:0.333"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9,0.2,1"
                                                KeyTime="0:0:0.333"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9,0.2,1"
                                                KeyTime="0:0:0.333"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackgroundGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                            <DiscreteThicknessKeyFrame KeyTime="0" Value="32,0,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxDisabledBorderBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxDisabledBrush}" />
                        </Trigger>
                        <Trigger SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="chelper:ControlHelper.VisualState" Value="Pressed" />
                        </Trigger>
                        <Trigger SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="False">
                            <Setter TargetName="LayoutRoot" Property="chelper:ControlHelper.VisualState" Value="Normal" />
                        </Trigger>
                        <DataTrigger Binding="{Binding SelectionMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Value="Single">
                            <Setter TargetName="LayoutRoot" Property="chelper:ControlHelper.VisualState" Value="MultiSelectDisabled" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectionMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Value="Extended">
                            <Setter TargetName="LayoutRoot" Property="chelper:ControlHelper.VisualState" Value="MultiSelectDisabled" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectionMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Value="Multiple">
                            <Setter TargetName="LayoutRoot" Property="chelper:ControlHelper.VisualState" Value="MultiSelectEnabled" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundPointerOver}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxPointerOverBorderBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxPointerOverBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ListViewItemBackgroundPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundPointerOver}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxPressedBorderBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxPressedBrush}" />
                        </MultiTrigger>
                        <!--  Selected  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ListViewItemBackgroundSelected}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelected}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxSelectedBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxSelectedBrush}" />
                            <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource ListViewItemCheckBrush}" />
                        </Trigger>
                        <!--  SelectedPointerOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelectedPointerOver}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorPointerOverBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxSelectedPointerOverBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxSelectedPointerOverBrush}" />
                            <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource ListViewItemCheckBrush}" />
                        </MultiTrigger>
                        <!--  SelectedPressed  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelectedPressed}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorPressedBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxSelectedPressedBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxSelectedPressedBrush}" />
                            <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource ListViewItemCheckPressedBrush}" />
                        </MultiTrigger>
                        <!--  SelectedDisabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedDisabled}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorDisabledBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxSelectedDisabledBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxSelectedDisabledBrush}" />
                            <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource ListViewItemCheckDisabledBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem" />

    <ControlTemplate x:Key="GridViewTemplate" TargetType="ListView">
        <Border
            x:Name="Bd"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <local:ScrollViewerEx
                Padding="{TemplateBinding Padding}"
                chelper:ScrollViewerHelper.AutoHideScrollBars="{TemplateBinding chelper:ScrollViewerHelper.AutoHideScrollBars}"
                Focusable="false"
                Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ContentPresenter
                        Grid.Row="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="{TemplateBinding chelper:ListViewHelper.Header}"
                        ContentTemplate="{TemplateBinding chelper:ListViewHelper.HeaderTemplate}" />
                    <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ContentPresenter
                        Grid.Row="2"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="{TemplateBinding chelper:ListViewHelper.Footer}"
                        ContentTemplate="{TemplateBinding chelper:ListViewHelper.FooterTemplate}" />
                </Grid>
            </local:ScrollViewerEx>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseListViewStyle" TargetType="ListView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListViewItemStyle}" />
        <Setter Property="chelper:ScrollViewerHelper.AutoHideScrollBars" Value="{DynamicResource AutoHideScrollBars}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <local:ScrollViewerEx
                            Padding="{TemplateBinding Padding}"
                            chelper:ScrollViewerHelper.AutoHideScrollBars="{TemplateBinding chelper:ScrollViewerHelper.AutoHideScrollBars}"
                            Focusable="false"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ContentPresenter
                                    Grid.Row="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{TemplateBinding chelper:ListViewHelper.Header}"
                                    ContentTemplate="{TemplateBinding chelper:ListViewHelper.HeaderTemplate}" />
                                <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ContentPresenter
                                    Grid.Row="2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{TemplateBinding chelper:ListViewHelper.Footer}"
                                    ContentTemplate="{TemplateBinding chelper:ListViewHelper.FooterTemplate}" />
                            </Grid>
                        </local:ScrollViewerEx>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DefaultListViewStyle"
        BasedOn="{StaticResource BaseListViewStyle}"
        TargetType="ListView">
        <Style.Resources>
            <ikw:IsGridViewConverter x:Key="IsGridViewConverter" />
        </Style.Resources>
        <Style.Triggers>
            <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource Self}, Converter={StaticResource IsGridViewConverter}}" Value="True">
                <Setter Property="Template" Value="{StaticResource GridViewTemplate}" />
                <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static GridView.GridViewItemContainerStyleKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultListViewStyle}" TargetType="ListView" />

    <!--  GridView ScrollViewer Style  -->
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  Grid.Column="0" Grid.Row="0"  -->
                        <DockPanel
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}">
                            <!--  Column Headers Scroll Viewer  -->
                            <local:ScrollViewerEx
                                DockPanel.Dock="Top"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter
                                    AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                    Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </local:ScrollViewerEx>
                            <!--  Items Scroll Viewer  -->
                            <ScrollContentPresenter
                                Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                KeyboardNavigation.DirectionalNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <!--  Horizontal Scroll Bar  -->
                        <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0.0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />
                        <!--  Vertical Scroll Bar  -->
                        <ScrollBar
                            Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0.0"
                            Orientation="Vertical"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />
                        <!--  Right Bottom Corner  -->
                        <DockPanel
                            Grid.Row="1"
                            Grid.Column="1"
                            Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}"
                            LastChildFill="false">
                            <Rectangle
                                Width="1"
                                DockPanel.Dock="Left"
                                Fill="Transparent"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <Rectangle
                                Height="1"
                                DockPanel.Dock="Top"
                                Fill="Transparent"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Canvas.Right" Value="-9" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Background" Value="#FF000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle
                            Width="1"
                            HorizontalAlignment="Center"
                            Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource ListViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutSeparatorBackground}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="12,0,12,0" />
        <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid SnapsToDevicePixels="true">
                        <!--  GridViewColumnHeader Content  -->
                        <Border
                            x:Name="ContentContainer"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Canvas>
                            <Thumb
                                x:Name="PART_HeaderGripper"
                                Background="Transparent"
                                Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ContentContainer" Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ContentContainer" Property="Background" Value="{DynamicResource ListViewItemBackgroundPressed}" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="{DynamicResource GridViewColumnHeaderMinHeight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ContentContainer" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <!--  The same as normal header, just no gripper.  -->
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="{DynamicResource GridViewColumnHeaderMinHeight}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="{DynamicResource ListViewItemReorderTargetThemeOpacity}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle
                                    Width="{TemplateBinding ActualWidth}"
                                    Height="{TemplateBinding ActualHeight}"
                                    Fill="{DynamicResource SystemControlBackgroundBaseHighBrush}"
                                    Opacity="0.3034" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="{x:Static GridView.GridViewItemContainerStyleKey}"
        BasedOn="{StaticResource DefaultListViewItemStyle}"
        TargetType="ListViewItem">
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="Background" Value="{DynamicResource GridViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource GridViewItemForeground}" />
        <Setter Property="MinWidth" Value="{DynamicResource GridViewItemMinWidth}" />
        <Setter Property="MinHeight" Value="{DynamicResource GridViewItemMinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border
                        x:Name="LayoutRoot"
                        Margin="{DynamicResource GridViewItemCompactSelectedBorderThemeThickness}"
                        chelper:PressHelper.IsEnabled="True"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Rectangle
                                x:Name="PressedBackground"
                                Width="3.5"
                                Margin="0,10"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Fill="{DynamicResource GridViewItemSelectedBorderBrush}"
                                Opacity="0"
                                RadiusX="{Binding Value, Source={StaticResource ListViewItemSelectionIndicatorCornerRadiusProxy}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                RadiusY="{Binding Value, Source={StaticResource ListViewItemSelectionIndicatorCornerRadiusProxy}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform x:Name="PillTransform" ScaleY="1" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <GridViewRowPresenter
                                x:Name="ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                                            <SplineDoubleKeyFrame
                                                KeySpline="1,0,0,0"
                                                KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0,1"
                                                KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                Value="{DynamicResource ListViewItemPillMinScale}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleY">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="{DynamicResource ListViewItemPillMinScale}" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0,0,0,1"
                                                KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                        </Trigger>
                        <Trigger SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="chelper:ControlHelper.VisualState" Value="Pressed" />
                        </Trigger>
                        <Trigger SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="False">
                            <Setter TargetName="LayoutRoot" Property="chelper:ControlHelper.VisualState" Value="Normal" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource GridViewItemBackgroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource GridViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PressedBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource GridViewItemBackgroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource GridViewItemForegroundSelected}" />
                        </Trigger>
                        <Trigger SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource GridViewItemBackgroundPressed}" />
                        </Trigger>
                        <!--  SelectedPointerOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource GridViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource GridViewItemSelectedPointerOverBorderBrush}" />
                        </MultiTrigger>
                        <!--  SelectedPressed  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="LayoutRoot" Property="chelper:PressHelper.IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource GridViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource GridViewItemSelectedPressedBorderBrush}" />
                        </MultiTrigger>
                        <!--  SelectedDisabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource GridViewItemBackgroundSelectedDisabled}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource GridViewItemSelectedDisabledBorderBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Static GridView.GridViewStyleKey}"
        BasedOn="{StaticResource BaseListViewStyle}"
        TargetType="ListView">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static GridView.GridViewItemContainerStyleKey}}" />
        <Setter Property="Template" Value="{StaticResource GridViewTemplate}" />
    </Style>

</ResourceDictionary>